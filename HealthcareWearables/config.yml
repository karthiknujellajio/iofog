user:
  email: "user@domain.com"
  password: "#Bugs4Fun"
flow: "HealthcareWearableFlow"
controller:
  # HTTP(S) endpoint to reach the controller
  address: "http://0.0.0.0:51121"
microservices:
  # Custom micro service that will connect to Scosche heart rate monitor via Bluetooth
  heart-rate:
    agent-name: "ioFog Agent"
    agent-config:
      bluetoothEnabled: true # this will install the iofog/restblue microservice
      abstractedHardwareEnabled: false
    images:
      arm: "edgeworx/healthcare-heart-rate:arm-v1"
      x86: "edgeworx/healthcare-heart-rate:x86-v1"
    microservice:
      name: "heart-rate-monitor" # If you are happy with the default name, you don't need to edit.
      root-host: false
      ports: []
      config:
        test_mode: true
        data_label: "Anonymous Person"
  # Simple JSON viewer for the heart rate output
  viewer:
    agent-name: "ioFog Agent"
    images:
      arm: "edgeworx/healthcare-heart-rate-ui:arm"
      # x86: "edgeworx/healthcare-heart-rate:x86-nano"
      x86: "edgeworx/healthcare-heart-rate-ui:x86"
    microservice:
      name: "heart-rate-viewer" # If you are happy with the default name, you don't need to edit.
      root-host: false
      ports:
        # The ui will be listening on port 80 (internal).
        - external: 5000 # You will be able to access the ui on <AGENT_IP>:5000
          internal: 80 # The ui is listening on port 80. Do not edit this.
          publicMode: false # Do not edit this.
      volumes: []
      env:
        - key: "BASE_URL"
          value: "http://localhost:8080/data"
routes:
  # Use this section to configure route between microservices
  # Use microservice name
  - from: "heart-rate-monitor"
    to: "heart-rate-viewer"
